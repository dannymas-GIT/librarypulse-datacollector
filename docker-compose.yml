version: '3.8'

# name: librarypulse

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./extracted_data:/app/extracted_data
    networks:
      - librarypulse-network
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/librarypulse
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - SKIP_TYPECHECKING=true
        - VITE_API_URL=http://localhost:8000/api/v1
    restart: always
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000/api/v1
    depends_on:
      - backend
    networks:
      - librarypulse-network

  db:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=librarypulse
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - librarypulse-network

  redis:
    image: redis:7
    restart: always
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - librarypulse-network

volumes:
  postgres_data:
    # name: librarypulse-postgres-data

networks:
  librarypulse-network:
    # name: librarypulse-network
    driver: bridge 